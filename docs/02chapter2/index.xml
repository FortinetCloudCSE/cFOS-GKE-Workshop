<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chapter 2 - Create GKE Cluster on Hugo for Fortinet TECWorkshops</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2.html</link><description>Recent content in Chapter 2 - Create GKE Cluster on Hugo for Fortinet TECWorkshops</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://fortinetcloudcse.github.io/UserRepo/02chapter2/index.xml" rel="self" type="application/rss+xml"/><item><title>Task 1 - Create VPC Network</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/2_task1.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/2_task1.html</guid><description>Create &amp;amp; Validate VPC Network for GKE Cluster Create VPC Network for GKE VM instances.
ipcidrRange is the ip range for VM node.
firewallallowProtocol=all will allow ssh into Worker node from anywhere to all protocols.
Below command will Create VPC Networks, Subnets and Firewall-rules
gcloud compute networks create gkenetwork --subnet-mode custom --bgp-routing-mode regional gcloud compute networks subnets create gkenode --network=gkenetwork --range=10.0.0.0/24 gcloud compute firewall-rules create gkenetwork-allow-custom --network gkenetwork --allow all --direction ingress --priority 100 output will be similar as below</description></item><item><title>Task 2 - Create GKE Cluster</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/3_task2.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/3_task2.html</guid><description>Create GKE Cluster Below configuration attributes need to be set
enable-ip-alias will enable to use alias ip on VM for POD IP Address
service-ipv4-cidr is the CIDR for clusterVIP Address
cluster-ipv4-cidr is for POD IP Address scope
kubectl get node -o wide shall show whether the node is in ready state
Below command will Create GKE Cluster
projectName=$(gcloud config list --format=&amp;#34;value(core.project)&amp;#34;) region=$(gcloud config get compute/region) gcloud services enable container.googleapis.com &amp;amp;&amp;amp; gcloud container clusters create my-first-cluster-1 \ --no-enable-basic-auth \ --cluster-version 1.</description></item><item><title>Task 3 - Validate GKE Cluster</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/4_task3.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/4_task3.html</guid><description>Validate GKE Cluster kubectl get node -o wide output will be similar as below</description></item><item><title>Task 4 - Enable 'ipforwarding' on Worker node</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/5_task4.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/5_task4.html</guid><description>Enable ipforwarding on Worker node By default, in GKE , ipforwarding is disabled. Info For **cFOS** to work, we have to enable *ipforwarding* on Worker node.
For more detail, check ipv4 forwarding config. To enable ipforwarding, we need to config canIpForward: true for instance profile, for more detail , check https://cloud.google.com/vpc/docs/using-routes#canipforward. Below command will enable ipforwarding
[[ $defaultClustername == &amp;#34;&amp;#34; ]] &amp;amp;&amp;amp; defaultClustername=&amp;#34;my-first-cluster-1&amp;#34; gkeClusterName=$defaultClustername clustersearchstring=$(gcloud container clusters list --filter=name=$gkeClusterName --format=&amp;#34;value(name)&amp;#34; --limit=1) node_list=$(gcloud compute instances list --filter=&amp;#34;name~&amp;#39;$clustersearchstring&amp;#39;&amp;#34; --format=&amp;#34;value(name)&amp;#34; ) projectName=$(gcloud config list --format=&amp;#34;value(core.</description></item></channel></rss>