<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chapter 2 - Create GKE Cluster on Hugo for Fortinet TECWorkshops</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2.html</link><description>Recent content in Chapter 2 - Create GKE Cluster on Hugo for Fortinet TECWorkshops</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://fortinetcloudcse.github.io/UserRepo/02chapter2/index.xml" rel="self" type="application/rss+xml"/><item><title>Task 1 - Create VPC Network for GKE Cluster</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/2_task1.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/2_task1.html</guid><description>Create VPC Network for GKE Cluster Create VPC Network for GKE VM instances.
ipcidrRange is the ip range for VM node.
firewallallowProtocol=all allow ssh into worker node from anywhere to all protocols
Below command will Create VPC Networks, Subnets and Firewall-rules
#!/bin/bash -xe echo $networkName [[ $networkName == &amp;#34;&amp;#34; ]] &amp;amp;&amp;amp; networkName=&amp;#34;gkenetwork&amp;#34; [[ $subnetName == &amp;#34;&amp;#34; ]] &amp;amp;&amp;amp; subnetName=&amp;#34;gkenode&amp;#34; [[ $ipcidrRange == &amp;#34;&amp;#34; ]] &amp;amp;&amp;amp; ipcidrRange=&amp;#34;10.0.0.0/24&amp;#34; [[ $firewallruleName == &amp;#34;&amp;#34; ]] &amp;amp;&amp;amp; firewallruleName=&amp;#34;$networkName-allow-custom&amp;#34; [[ $firewallallowProtocol == &amp;#34;&amp;#34; ]] &amp;amp;&amp;amp; firewallallowProtocol=&amp;#34;all&amp;#34; echo $networkName gcloud compute networks create $networkName --subnet-mode custom --bgp-routing-mode regional gcloud compute networks subnets create $subnetName --network=$networkName --range=$ipcidrRange &amp;amp;&amp;amp; \ gcloud compute firewall-rules create $firewallruleName --network $networkName --allow $firewallallowProtocol --direction ingress --priority 100</description></item><item><title>Task 2 - Validate VPC Network</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/3_task2.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/3_task2.html</guid><description>Validate VPC Network, Subnets and Firewall-rules Validate VPC Network
gcloud compute networks list --format json --filter gke output will be similar as below
[ { &amp;#34;autoCreateSubnetworks&amp;#34;: false, &amp;#34;creationTimestamp&amp;#34;: &amp;#34;2023-05-18T00:32:47.108-07:00&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;7011832803059329648&amp;#34;, &amp;#34;kind&amp;#34;: &amp;#34;compute#network&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;gkenetwork1&amp;#34;, &amp;#34;networkFirewallPolicyEnforcementOrder&amp;#34;: &amp;#34;AFTER_CLASSIC_FIREWALL&amp;#34;, &amp;#34;routingConfig&amp;#34;: { &amp;#34;routingMode&amp;#34;: &amp;#34;REGIONAL&amp;#34; }, &amp;#34;selfLink&amp;#34;: &amp;#34;https://www.googleapis.com/compute/v1/projects/cfos-384323/global/networks/gkenetwork1&amp;#34;, &amp;#34;selfLinkWithId&amp;#34;: &amp;#34;https://www.googleapis.com/compute/v1/projects/cfos-384323/global/networks/7011832803059329648&amp;#34;, &amp;#34;subnetworks&amp;#34;: [ &amp;#34;https://www.googleapis.com/compute/v1/projects/cfos-384323/regions/asia-east1/subnetworks/gkenode&amp;#34; ], &amp;#34;x_gcloud_bgp_routing_mode&amp;#34;: &amp;#34;REGIONAL&amp;#34;, &amp;#34;x_gcloud_subnet_mode&amp;#34;: &amp;#34;CUSTOM&amp;#34; } ] Validate Subnets
gcloud compute networks subnets list --format json --filter gke output will be similar as below</description></item><item><title>Task 3 - Create GKE Cluster</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/4_task3.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/4_task3.html</guid><description>Create GKE Cluster Below configuration attributes need to be set
enable-ip-alias to enable use alias ip on VM for pod ip address
service-ipv4-cidr is the cidr for clusterVIP address
cluster-ipv4-cidr is for POD ip address scope
kubectl get node -o wide shall show the node in ready state.
Below command will Create GKE Cluster
``` #!/bin/bash -xe [[ $defaultClustername == &amp;quot;&amp;quot; ]] &amp;amp;&amp;amp; defaultClustername=&amp;quot;my-first-cluster-1&amp;quot; [[ $networkName == &amp;quot;&amp;quot; ]] &amp;amp;&amp;amp; networkName=&amp;quot;gkenetwork&amp;quot; [[ $subnetName == &amp;quot;&amp;quot; ]] &amp;amp;&amp;amp; subnetName=&amp;quot;gkenode&amp;quot; [[ $machineType == &amp;quot;&amp;quot; ]] &amp;amp;&amp;amp; machineType=&amp;quot;g1-small&amp;quot; [[ $num_nodes == &amp;quot;&amp;quot; ]] &amp;amp;&amp;amp; num_nodes=&amp;quot;1&amp;quot; [[ $services_ipv4_cidr == &amp;quot;&amp;quot; ]] &amp;amp;&amp;amp; services_ipv4_cidr=&amp;quot;10.</description></item><item><title>Task 4 - Validate GKE Cluster</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/5_task4.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/5_task4.html</guid><description>Validate GKE Cluster kubectl get node -o wide output will be similar as below
NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME gke-my-first-cluster-1-default-pool-c10fbf4f-3d1s Ready &amp;lt;none&amp;gt; 33s v1.26.3-gke.1000 10.0.0.4 35.189.160.192 Ubuntu 22.04.2 LTS 5.15.0-1028-gke containerd://1.6.18 gke-my-first-cluster-1-default-pool-c10fbf4f-5qxh Ready &amp;lt;none&amp;gt; 33s v1.26.3-gke.1000 10.0.0.3 34.80.212.63 Ubuntu 22.04.2 LTS 5.15.0-1028-gke containerd://1.6.18</description></item><item><title>Task 5 - Enable 'ipforwarding' on Worker node</title><link>https://fortinetcloudcse.github.io/UserRepo/02chapter2/6_task5.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/02chapter2/6_task5.html</guid><description>Enable &amp;lsquo;ipforwarding&amp;rsquo; on Worker node By default, the GKE come with ipforwarding disabled. for cFOS to work. we have to enable ip forwarding on worker node. for more detail, check https://github.com/GoogleCloudPlatform/guest-configs/blob/master/src/etc/sysctl.d/60-gce-network-security.conf for ipv4 forwarding config.
To enable ipforwarding, we need to config canIpForward: true for instance profile, for more detail , check https://cloud.google.com/vpc/docs/using-routes#canipforward.
Below command will enable ipforwarding
[[ $defaultClustername == &amp;#34;&amp;#34; ]] &amp;amp;&amp;amp; defaultClustername=&amp;#34;my-first-cluster-1&amp;#34; gkeClusterName=$defaultClustername clustersearchstring=$(gcloud container clusters list --filter=name=$gkeClusterName --format=&amp;#34;value(name)&amp;#34; --limit=1) node_list=$(gcloud compute instances list --filter=&amp;#34;name~&amp;#39;$clustersearchstring&amp;#39;&amp;#34; --format=&amp;#34;value(name)&amp;#34; ) projectName=$(gcloud config list --format=&amp;#34;value(core.</description></item></channel></rss>