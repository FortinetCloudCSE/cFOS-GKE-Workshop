<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chapter 6 - Validate Security features on Hugo for Fortinet TECWorkshops</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6.html</link><description>Recent content in Chapter 6 - Validate Security features on Hugo for Fortinet TECWorkshops</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://fortinetcloudcse.github.io/UserRepo/06chapter6/index.xml" rel="self" type="application/rss+xml"/><item><title>Task 1 - Perform initial IPS test</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/2_task1.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/2_task1.html</guid><description>Perform &amp;amp; Validate initial IPS test on a target website It is very common that a malicious POD can geneate malicious traffic targeting external network or VM or physical machine.
While the traffic is often encrypted, when traffic reaches cFOS, cFOS can decrpyt the traffic and look into the IPS signature.
If the signature is matched, cFOS can either block it or pass it with alert depending on the policy configured.</description></item><item><title>Task 2 - Perform initial Web Filter test</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/3_task2.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/3_task2.html</guid><description>Perform initial Web Filter test on a target website It is very common that a malicious POD can geneate malicious traffic targeting external network or VM or physical machine.
While the traffic is often encrypted, when traffic reaches cFOS, cFOS can decrpyt the traffic and look into the IPS signature.
If the signature is matched, cFOS can either block it or pass it with alert depending on the policy configured.</description></item><item><title>Task 3 - Delete firewall policy using cFOS API</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/4_task3.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/4_task3.html</guid><description>Delete firewall policy using cFOS Rest API One can use cFOS shell to change firewall policy or can also use cFOS restAPI for it.
After deletion of firewall policy, ping 1.1.1.1 from application pod, which will no longer is reachable.
Below command will delete firewall policy
nodeList=$(kubectl get pod -l app=fos -o jsonpath=&amp;#39;{.items[*].status.podIP}&amp;#39;) kubectl delete cm foscfgfirewallpolicy echo $nodeList apppodname=$(kubectl get pod | grep multi | grep -v termin | awk &amp;#39;{print $1}&amp;#39; | head -1) for i in $nodeList; do { kubectl exec -it po/$apppodname -- curl -X DELETE &amp;#34;$i/api/v2/cmdb/firewall/policy/300&amp;#34; } done output will be similar as below</description></item><item><title>Task 4 - Create a dedicated POD to update</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/5_task4.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/5_task4.html</guid><description>Create an POD to update POD source IP to cFOS POD IPs keep changing due to various reasons like scale in/out or when deleted, so use a dedicated POD to keep updating the POD IP address to cFOS address group.
This POD will keep running as a background process, which will update the application POD&amp;rsquo;s IP that has annoation with net-attach-def as cfosapp to cFOS using cFOS restful API.
API call to cFOS can use either cFOS dns name or cFOS node IPs.</description></item><item><title>Task 5 - Perform IPS test for 2nd time</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/6_task5.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/6_task5.html</guid><description>Perform IPS test for 2nd time on a target website We do IPS test again, this time, the policy is created by policymanager which will take into action.
We can check the IPS logs for validation.
The traffic will match with a different policy ID which is 101.
Below command will send malicous traffic from application pod
echo -e &amp;#34;generate traffic to www.hackthebox.eu&amp;#34; kubectl get pod | grep multi | grep -v termin | awk &amp;#39;{print }&amp;#39; | while read line; do kubectl exec -t po/$line -- dig www.</description></item><item><title>Task 6 - Perform Web Filter test for 2nd time</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/7_task6.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/7_task6.html</guid><description>Perform Web Filter test for 2nd time on a target website We do Web Filter test again, this time, the policy is created by policymanager which will take into action.
We can check the Web Filter logs for validation.
The traffic will match with a different policy ID which is 101.
Below command will generate traffic to target website
kubectl get pod | grep multi | grep -v termin | awk &amp;#39;{print }&amp;#39; | while read line; do kubectl exec -t po/$line -- curl -k -I https://www.</description></item><item><title>Task 7 - Modify Worker Node default CNI</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/8_task7.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/8_task7.html</guid><description>Modify Worker Node default CNI Config In previous sections, we did not touch application POD&amp;rsquo;s default route. We were interested on the traffic whose destination is 1.1.1.1 which will send traffic to cFOS, while the rest of the traffic will continue to go to internet via default route.
What about, if we want to send all traffic from application POD to cFOS?
To accomplish it, we will need to insert a default route into application pod, for which, we will use annotation with keyword default-route to the POD definition.</description></item><item><title>Task 8 - Delete application deployment</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/9_task8.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/9_task8.html</guid><description>Delete current application deployment Below command will delete current application deployment
kubectl get deployment multitool01-deployment &amp;amp;&amp;amp; kubectl delete deployment multitool01-deployment output will be similar as below</description></item><item><title>Task 9 - Create application deployment</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/10_task9.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/10_task9.html</guid><description>Create application deployment Create application deployment with annotation to use net-attach-def and make config default-route pointing to net-attach-def attached to interface, .i.e. cFOS interface.
The annotation field has context k8s.v1.cni.cncf.io/networks: &amp;lsquo;[ { &amp;ldquo;name&amp;rdquo;: &amp;ldquo;cfosapp&amp;rdquo;, &amp;ldquo;default-route&amp;rdquo;: [&amp;ldquo;10.1.200.252&amp;rdquo;] } ]&amp;rsquo;, with config having default-route nexthop to 10.1.200.252.
Check IP route table on application, to see the default route pointing to cFOS interface.
Below command to create application deployment
cat &amp;lt;&amp;lt; EOF | kubectl create -f - apiVersion: apps/v1 kind: Deployment metadata: name: multitool01-deployment labels: app: multitool01 spec: replicas: 4 selector: matchLabels: app: multitool01 template: metadata: labels: app: multitool01 annotations: k8s.</description></item><item><title>Task 10 - Perform Web Filter test for 3rd time</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/11_task10.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/11_task10.html</guid><description>Perform Web Filter test for 3rd time on a target website For this test, we will use a destination that doesn&amp;rsquo;t match the default route, for example https://xoso.com.vn. cFOS will classify this website as Gambling, and will be blocked by default profile.
Below command will provide access to the target website
kubectl get pod | grep multi | grep -v termin | awk &amp;#39;{print }&amp;#39; | while read line; do kubectl exec -t po/$line -- curl -k -I https://xoso.</description></item><item><title>Task 11 - Delete firewall policy</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/12_task11.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/12_task11.html</guid><description>cFOS REST API to delete firewall policy We will delete the policy created by policy_manager POD with policy_id 101 using cfos REST API.
After deleting the firewall policy, we will CURL to check whether any firewall policy exist on cFOS POD.
Below command will delete firewall policy
nodeList=$(kubectl get pod -l app=fos -o jsonpath=&amp;#39;{.items[*].status.podIP}&amp;#39;) for i in $nodeList; do { kubectl exec -it po/policymanager -- curl -X DELETE &amp;#34;$i/api/v2/cmdb/firewall/policy/101&amp;#34; } done Validate the result kubectl exec -it po/policymanager -- curl -X GET http://fos-deployment.</description></item><item><title>Task 12 - Install gatekeeperv3</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/13_task12.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/13_task12.html</guid><description>Install gatekeeperv3 In this usecase, we will use standard K8s networkpolicy to create firewallpolicy for cFOS.
The networkpolicy submitted by kubectl, will be sent to gatekeeper admission controller, where there is a constraint delpoyed to inspect the policy constraint via constraint template.
If the networkpolicy pass the constrait check, the constraint template will use cFOS Rest API to create the firewall policy.
Below command will install gatekeeper constraint template
kubectl apply -f https://raw.</description></item><item><title>Task 13 - Install gatekeeperv3 constraint template</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/14_task13.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/14_task13.html</guid><description>Install gatekeeperv3 constraint template This template include a session call targets.
In the targets, it uses repo as policy engine language to parse the policy.
In the repo, we use function http.send to send API request to cFOS.
Note We only need to deploy template once. Below command will delete firewall policy
filename=&amp;#34;47_constraint_template.yml&amp;#34; cat &amp;lt;&amp;lt; EOF &amp;gt; $filename apiVersion: templates.gatekeeper.sh/v1beta1 kind: ConstraintTemplate metadata: name: k8segressnetworkpolicytocfosutmpolicy spec: crd: spec: names: kind: K8sEgressNetworkPolicyToCfosUtmPolicy validation: openAPIV3Schema: properties: message: type: string podcidr: type: string cfosegressfirewallpolicy: type: string outgoingport: type: string utmstatus: type: string ipsprofile: type: string avprofile: type: string sslsshprofile: type: string action: type: string srcintf: type: string firewalladdressapiurl: type: string firewallpolicyapiurl: type: string policyid : type: string extraservice: type: string targets: - target: admission.</description></item><item><title>Task 14 - Install policy constraint</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/15_task14.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/15_task14.html</guid><description>Install policy constraint The policy constraint is defined to watch respective API, for example, here we watch NetworkPolicy API. It also functions as parameter input to constraint template.
For example, user passed in policy id=200 for constraint template, which we also pass in cFOS restAPI URL etc.
Note We are using dns name of clusterIP for cFOS API.
If we are not using shared storage for cFOS /data folder, we need to run API call multiple times to make sure that the config is applied for each cFOS POD.</description></item><item><title>Task 15 - Create standard NetworkPolicy</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/16_task15.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/16_task15.html</guid><description>Create standard NetworkPolicy In here, we create standard K8s egress networkpolicy.
This policy will be created on cFOS with the help of gatekeeper.
Note Once created, policy will not show up when executing the command **kubectl get networkpolicy** created on cFOS.
But, one can get the policy info by using the cFOS API with command "kubectl exec -it po/policymanager -- curl -X GET http://fos-deployment.default.svc.cluster.local/api/v2/cmdb/firewall/policy" Below command will deploy networkpolicy
[[ -z $cfos_label ]] &amp;amp;&amp;amp; cfos_label=&amp;#34;fos&amp;#34; [[ -z $gatekeeper_policy_id ]] &amp;amp;&amp;amp; gatekeeper_policy_id=&amp;#34;200&amp;#34; filename=&amp;#34;49_network_firewallpolicy_egress.</description></item><item><title>Task 16 - Restart Application Deployment</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/17_task16.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/17_task16.html</guid><description>Restart Application Deployment Restart application deployment to trigger policymanager update addressgrp in cFOS due to limitation of policymanager, it require pod ip change to trigger update addressgrp in cFOS, we can restart application pod, scale in, scale out etc to force pod IP change. you can use &amp;ldquo;kubectl logs -f po/policymanager&amp;rdquo; to check the log of policymanager
Below command will install gatekeeper
kubectl rollout restart deployment multitool01-deployment &amp;amp;&amp;amp; kubectl rollout status deployment multitool01-deployment echo &amp;#34;sleep 30 seconds for it will take some time to trigger policymanager to update cfos addressgrp&amp;#34; sleep 30 Check gatekeeper installation status kubectl rollout status deployment multitool01-deployment output will be similar as below</description></item><item><title>Task 17 - Perform IPS test</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/18_task17.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/18_task17.html</guid><description>Perform IPS test Now, the policy created by policymanager will take the action.
When we can check the IPS logs, it shows the traffic matching a different policy ID which is 200.
Below command will send malicous traffic from application pod
kubectl get pod | grep multi | grep -v termin | awk &amp;#39;{print }&amp;#39; | while read line; do kubectl exec -t po/$line -- dig www.hackthebox.eu ; done kubectl get pod | grep multi | grep -v termin | awk &amp;#39;{print }&amp;#39; | while read line; do kubectl exec -t po/$line -- ping -c 2 www.</description></item><item><title>Task 18 - Perform Web Filter test</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/19_task18.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/19_task18.html</guid><description>Perform Web Filter test Below command will generate traffic to target website
kubectl get pod | grep multi | grep -v termin | awk &amp;#39;{print }&amp;#39; | while read line; do kubectl exec -t po/$line -- curl -k -I https://www.casino.org ; done Check status kubectl get pod | grep fos | awk &amp;#39;{print $1}&amp;#39; | while read line; do kubectl exec -t po/$line -- tail /data/var/log/log/webf.0 | grep policyid=200 ; done output will be similar as below</description></item><item><title>Task 19 - Destroy GKE Cluster &amp; Network</title><link>https://fortinetcloudcse.github.io/UserRepo/06chapter6/20_task19.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/06chapter6/20_task19.html</guid><description>Destroy GKE Cluster &amp;amp; Network Below command will Destroy the cluster
gcloud container clusters delete my-first-cluster-1 --zone us-central1-a --quiet &amp;amp;&amp;amp; gcloud compute firewall-rules delete gkenetwork-allow-custom --quiet &amp;amp;&amp;amp; gcloud compute networks subnets delete gkenode --region us-central1 --quiet &amp;amp;&amp;amp; gcloud compute networks delete gkenetwork --quiet output will be similar as below</description></item></channel></rss>