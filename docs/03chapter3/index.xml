<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chapter 3 - Multus CNI Installation on Hugo for Fortinet TECWorkshops</title><link>https://fortinetcloudcse.github.io/UserRepo/03chapter3.html</link><description>Recent content in Chapter 3 - Multus CNI Installation on Hugo for Fortinet TECWorkshops</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://fortinetcloudcse.github.io/UserRepo/03chapter3/index.xml" rel="self" type="application/rss+xml"/><item><title>Task 1 - Install Multus CNI</title><link>https://fortinetcloudcse.github.io/UserRepo/03chapter3/2_task1.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/03chapter3/2_task1.html</guid><description>Install Multus CNI We need to install Multus CNI to route traffic from application POD to cFOS POD.
By default, GKE come with default CNI which uses ptp binary with host-local ipam.
The default CNI config has name 10-containerd-net.conflist. When we install Multus, the default Multus config will use &amp;quot;&amp;ndash;multus-conf-file=auto&amp;quot;. With the above option, Multus will automatically create 00-multus.conf file with delegate to default 10-containerd-net.conflist. we need to change default Multus config path: /home/kubernetes/bin .</description></item><item><title>Task 2 - Validate Multus CNI</title><link>https://fortinetcloudcse.github.io/UserRepo/03chapter3/3_task2.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/03chapter3/3_task2.html</guid><description>Validate Multus CNI installation Validate VPC Network
kubectl rollout status ds/kube-multus-ds -n kube-system kubectl logs ds/kube-multus-ds -c kube-multus -n kube-system output will be similar as below
daemon set &amp;#34;kube-multus-ds&amp;#34; successfully rolled out 2023-05-18T07:41:46+00:00 Generating Multus configuration file using files in /host/etc/cni/net.d... 2023-05-18T07:41:47+00:00 Using MASTER_PLUGIN: 10-containerd-net.conflist 2023-05-18T07:41:48+00:00 Nested capabilities string: &amp;#34;capabilities&amp;#34;: {&amp;#34;portMappings&amp;#34;: true}, 2023-05-18T07:41:48+00:00 Using /host/etc/cni/net.d/10-containerd-net.conflist as a source to generate the Multus configuration 2023-05-18T07:41:48+00:00 Config file created @ /host/etc/cni/net.d/00-multus.conf { &amp;#34;cniVersion&amp;#34;: &amp;#34;0.</description></item><item><title>Task 3 - Create net-attach-def for cFOS</title><link>https://fortinetcloudcse.github.io/UserRepo/03chapter3/4_task3.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/03chapter3/4_task3.html</guid><description>Create net-attach-def for cFOS We will create net-attach-def with mac-vlan CNI, Multus CNI will use this net-attach-def to create network and attach POD to the network.
We use host-local as IPAM CNI. The net-attach-def is for cfos to attach.
The cni config of macvlan use bridge mode and associated with ens4 interface on Worker Node.
If the master interface on Worker Node is other than ens4, we need to change that to match the actual one on the Host Node.</description></item><item><title>Task 4 - Validate net-attach-def</title><link>https://fortinetcloudcse.github.io/UserRepo/03chapter3/5_task4.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/03chapter3/5_task4.html</guid><description>Validate net-attach-def kubectl get net-attach-def cfosdefaultcni5 -o yaml output will be similar as below
apiVersion: k8s.cni.cncf.io/v1 kind: NetworkAttachmentDefinition metadata: creationTimestamp: &amp;#34;2023-05-18T07:41:51Z&amp;#34; generation: 1 name: cfosdefaultcni5 namespace: default resourceVersion: &amp;#34;2821&amp;#34; uid: 4314fde9-cc8f-4744-bb99-8083f1e6a5e3 spec: config: &amp;#39;{ &amp;#34;cniVersion&amp;#34;: &amp;#34;0.3.1&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;macvlan&amp;#34;, &amp;#34;master&amp;#34;: &amp;#34;ens4&amp;#34;, &amp;#34;mode&amp;#34;: &amp;#34;bridge&amp;#34;, &amp;#34;ipam&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;host-local&amp;#34;, &amp;#34;subnet&amp;#34;: &amp;#34;10.1.200.0/24&amp;#34;, &amp;#34;rangeStart&amp;#34;: &amp;#34;10.1.200.251&amp;#34;, &amp;#34;rangeEnd&amp;#34;: &amp;#34;10.1.200.253&amp;#34;, &amp;#34;gateway&amp;#34;: &amp;#34;10.1.200.1&amp;#34; } }&amp;#39;</description></item><item><title>Task 5 - Create net-attach-def for application</title><link>https://fortinetcloudcse.github.io/UserRepo/03chapter3/6_task5.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/03chapter3/6_task5.html</guid><description>Create net-attach-def for application We will create net-attach-def with mac-vlan CNI.
Multus CNI will use this net-attach-def to create Network and attach POD to the Network.
We use host-local as IPAM CNI.
The net-attach-def is for application to attach. The cni config of macvlan use bridge mode and associated with &amp;ldquo;ens4&amp;rdquo; interface on Worker Node.
If the master interface on Worker Node is other than ens4, then it needs to be changed.</description></item><item><title>Task 6 - Validate net-attach-def for application</title><link>https://fortinetcloudcse.github.io/UserRepo/03chapter3/7_task6.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fortinetcloudcse.github.io/UserRepo/03chapter3/7_task6.html</guid><description>Validate net-attach-def for application kubectl get net-attach-def cfosapp -o yaml output will be similar as below
apiVersion: k8s.cni.cncf.io/v1 kind: NetworkAttachmentDefinition metadata: creationTimestamp: &amp;#34;2023-05-18T07:41:52Z&amp;#34; generation: 1 name: cfosapp namespace: default resourceVersion: &amp;#34;2831&amp;#34; uid: 6618ec98-5f33-47a8-9c69-fe61ea382034 spec: config: |- { &amp;#34;cniVersion&amp;#34;: &amp;#34;0.3.1&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;macvlan&amp;#34;, &amp;#34;master&amp;#34;: &amp;#34;ens4&amp;#34;, &amp;#34;mode&amp;#34;: &amp;#34;bridge&amp;#34;, &amp;#34;ipam&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;host-local&amp;#34;, &amp;#34;subnet&amp;#34;: &amp;#34;10.1.200.0/24&amp;#34;, &amp;#34;routes&amp;#34;: [ { &amp;#34;dst&amp;#34;: &amp;#34;104.18.8.132/32&amp;#34;, &amp;#34;gw&amp;#34;: &amp;#34;10.1.200.252&amp;#34;}, { &amp;#34;dst&amp;#34;: &amp;#34;104.18.9.132/32&amp;#34;, &amp;#34;gw&amp;#34;: &amp;#34;10.1.200.252&amp;#34;}, { &amp;#34;dst&amp;#34;: &amp;#34;89.238.73.97/32&amp;#34;, &amp;#34;gw&amp;#34;: &amp;#34;10.1.200.252&amp;#34;}, { &amp;#34;dst&amp;#34;: &amp;#34;1.</description></item></channel></rss>